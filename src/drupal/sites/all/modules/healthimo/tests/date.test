<?php
/**
 * @file
 * Test the hfstx module
 */

class HealthimoDateTestCase extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
                'name' => 'healthimo.date.inc',
                'description' => 'window, localtime, interval',
                'group' => 'healthimo',
        );
    }

    function setUp() {
        parent::setUp('healthimo');
//        $permissions = array('administer google analytics');
//        // User to set up google_analytics.
//        $user = $this->drupalCreateUser($permissions);
//        $this->drupalLogin($user);
    }

    function testDateWindow() {
        $tz = "America/Chicago";
        // must set the timezone for mktime to work
        date_default_timezone_set($tz);

        // mktime( h, m, s, M, D, YYYY)
        $timestamp = mktime(1, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 1, 2, $tz);
        $this->assertTrue($value);//

        date_default_timezone_set($tz);
        $timestamp = mktime(0, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 1, 2, $tz);
        $this->assertFalse($value);

        date_default_timezone_set($tz);
        $timestamp = mktime(1, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 1, 1, $tz);
        $this->assertFalse($value);

        date_default_timezone_set($tz);
        $timestamp = mktime(0, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 0, 1, $tz);
        $this->assertTrue($value);//

        date_default_timezone_set($tz);
        $timestamp = mktime(0, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 0, 24, $tz);
        $this->assertTrue($value);

        date_default_timezone_set($tz);
        $timestamp = mktime(23, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 0, 24, $tz);
        $this->assertTrue($value);

        date_default_timezone_set($tz);
        $timestamp = mktime(23, 30, 30, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 23, 24, $tz);
        $this->assertTrue($value);//

        date_default_timezone_set($tz);
        $timestamp = mktime(23, 59, 59, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 23, 24, $tz);
        $this->assertTrue($value);//

        date_default_timezone_set($tz);
        $timestamp = mktime(23, 0, 0, 1, 1, 2010);
        $value = healthimo_date_is_in_window_hours($timestamp, 23, 24, $tz);
        $this->assertTrue($value);//

    }

    function testLocalTime() {
        //$d->format('g:i A m/d/y')
        date_default_timezone_set('UTC');
        // mktime( h, m, s, M, D, YYYY)
        $timestamp = mktime(10, 30, 30, 1, 1, 2010);
        $d = healthimo_date_get_local_time($timestamp, 'UTC');
        $this->assertEqual(10,$d->format('H'));
        $d = healthimo_date_get_local_time($timestamp, 'America/Chicago');
        $this->assertEqual(10 + ($d->getOffset()/60/60),$d->format('H'));
    }

    function testDateIntervalInDays() {
        //function healthimo_date_is_diff_n_or_more_days($date1, $date2, $days) {
        // mktime( h, m, s, M, D, YYYY)
        $t1 = mktime(0, 0, 0, 1, 1, 2010);
        $t2 = mktime(0, 0, 0, 1, 2, 2010);
        $days = 1;
        $value = healthimo_date_is_diff_n_or_more_days($t1, $t2, $days);
        $this->assertTrue($value);

        $t1 = mktime(0, 0, 0, 1, 1, 2010);
        $t2 = mktime(0, 0, 0, 1, 1, 2010);
        $days = 1;
        $value = healthimo_date_is_diff_n_or_more_days($t1, $t2, $days);
        $this->assertFalse($value);

        $t1 = mktime(0, 0, 0, 1, 1, 2010);
        $t2 = mktime(0, 0, 0, 5, 1, 2010);
        $days = 4;
        $value = healthimo_date_is_diff_n_or_more_days($t1, $t2, $days);
        $this->assertTrue($value);

        $t1 = mktime(0, 0, 0, 1, 1, 2010);
        $t2 = mktime(0, 0, 0, 6, 1, 2010);
        $days = 4;
        $value = healthimo_date_is_diff_n_or_more_days($t1, $t2, $days);
        $this->assertTrue($value);

        $t1 = mktime(0, 0, 0, 1, 31, 2010);
        $t2 = mktime(0, 0, 0, 2, 1, 2010);
        $days = 1;
        $value = healthimo_date_is_diff_n_or_more_days($t1, $t2, $days);
        $this->assertTrue($value);

        // timestamp 1 sec diff, cal days 1 day diff
        $t1 = mktime(23, 59, 59, 1, 31, 2010);
        $t2 = mktime(0, 0, 0, 2, 1, 2010);
        $days = 1;
        $value = healthimo_date_is_diff_n_or_more_days($t1, $t2, $days);
        $this->assertTrue($value);

    }

    function testTimeOfDayToTodayTime() {
        $time_of_day = "20:15";
        $todayTime = healthimo_date_time_of_day_to_today_time($time_of_day, 'America/New_York');
        $this->assertEqual(20, $todayTime->format('H'));
        $this->assertEqual(15, $todayTime->format('i'));
        $this->assertEqual(0, $todayTime->format('s'));
        $time_of_day = "23:59";
        $todayTime = healthimo_date_time_of_day_to_today_time($time_of_day, 'America/New_York');
        $this->assertEqual(23, $todayTime->format('H'));
        $this->assertEqual(59, $todayTime->format('i'));
        $this->assertEqual(0, $todayTime->format('s'));
    }

    function testDateDiff() {
        $d1 = healthimo_date_get_local_time(time(), 'America/Chicago');
        $d2 = $d1;
        $result = healthimo_date_diff($d1, $d2);
        $this->assertEqual(0, $result);
        $now = time();
        $d1 = healthimo_date_get_local_time($now, 'America/Chicago');
        $d2 = healthimo_date_get_local_time($now+1, 'America/Chicago');
        $result = healthimo_date_diff($d1, $d2);
        $this->assertEqual(1, $result);
        $d1 = healthimo_date_get_local_time($now, 'America/Chicago');
        $d2 = healthimo_date_get_local_time($now-1, 'America/Chicago');
        $result = healthimo_date_diff($d1, $d2);
        $this->assertEqual(-1, $result);
    }


    function testMakeLocalTime() {
        $date = healthimo_date_make_local_time('2010-06-22 15:30', 'America/Chicago');
        $this->assertEqual( 2010, $date->format('Y') );
        $this->assertEqual( 6, $date->format('m') );
        $this->assertEqual( 22, $date->format('d') );
        $this->assertEqual( 15, $date->format('H') );
        $this->assertEqual( 30, $date->format('i') );
        $this->assertEqual( 00, $date->format('s') );
        $date = healthimo_date_make_local_time('2010-06-22 16:30', 'America/Chicago');
        $this->assertEqual( 2010, $date->format('Y') );
        $this->assertEqual( 6, $date->format('m') );
        $this->assertEqual( 22, $date->format('d') );
        $this->assertEqual( 16, $date->format('H') );
        $this->assertEqual( 30, $date->format('i') );
        $this->assertEqual( 00, $date->format('s') );
    }
}